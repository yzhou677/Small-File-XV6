This is the whold code of "open()" system call. 
You need to pass two variables as parameters: one is file's name; another is file flags: open("file", O_CREATE | O_SMALL | O_RDWR);
Open() will create a file, and return a file descriptor to user.
If the flags of the file say that the file is a small file(O_SMALL), pass T_SMALL to create() function and create a small file with data size less than and equal to 64bytes.




int sys_open(void)
{
  char *path;
  int fd, omode;
  struct file *f;
  struct inode *ip;

  if(argstr(0, &path) < 0 || argint(1, &omode) < 0)
    return -1;

  begin_op();
  
  if(omode & O_CREATE){
    if(omode & O_SMALL){
       ip = create(path, T_SMALL, 0, 0);
    }
    else{
    ip = create(path, T_FILE, 0, 0);
    }
    if(ip == 0){
      end_op();
      return -1;
    }
  } else {
    if((ip = namei(path)) == 0){
      end_op();
      return -1;
    }
    ilock(ip);
    if(ip->type == T_DIR && omode != O_RDONLY){
      iunlockput(ip);
      end_op();
      return -1;
    }
  }

  if((f = filealloc()) == 0 || (fd = fdalloc(f)) < 0){
    if(f)
      fileclose(f);
    iunlockput(ip);
    end_op();
    return -1;
  }
  iunlock(ip);
  end_op();

  f->type = FD_INODE;
  f->ip = ip;
  f->off = 0;
  f->readable = !(omode & O_WRONLY);
  f->writable = (omode & O_WRONLY) || (omode & O_RDWR);
  return fd;
}